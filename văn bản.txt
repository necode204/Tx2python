# models.py trong app library
from django.db import models

class Category(models.Model):
    name = models.CharField(max_length=50)

    def __str__(self):
        return self.name

class Book(models.Model):
    title = models.CharField(max_length=100)
    author = models.CharField(max_length=100)
    published_year = models.IntegerField()
    category = models.ForeignKey(Category, on_delete=models.CASCADE, null=True)

    def __str__(self):
        return self.title

class Student(models.Model):
    name = models.CharField(max_length=100)
    student_id = models.CharField(max_length=20)
    books = models.ManyToManyField(Book)

    def __str__(self):
        return self.name

# Tạo dữ liệu mẫu bằng Django Shell
# python manage.py shell
from library.models import Book, Category, Student

# Bài 1 - Thêm dữ liệu Book
c1 = Category.objects.create(name="Lập trình")
c2 = Category.objects.create(name="Thiếu nhi")
c3 = Category.objects.create(name="Khoa học")

b1 = Book.objects.create(title="Python cơ bản", author="Nguyễn Văn A", published_year=2018, category=c1)
b2 = Book.objects.create(title="Lập trình Django cơ bản", author="Nguyễn Văn A", published_year=2020, category=c1)
b3 = Book.objects.create(title="Truyện cổ tích", author="Trần B", published_year=2005, category=c2)
b4 = Book.objects.create(title="Vũ trụ và hành tinh", author="Lê C", published_year=2019, category=c3)
b5 = Book.objects.create(title="Nâng cao Python", author="Ngô D", published_year=2022, category=c1)

Book.objects.all()  # Hiển thị toàn bộ sách

# Bài 2 - Truy vấn điều kiện
Book.objects.filter(published_year__gt=2015)
Book.objects.filter(title__icontains="Python")
Book.objects.filter(author="Nguyễn Văn A").count()
Book.objects.get(title="Lập trình Django cơ bản")
Book.objects.exclude(published_year__lt=2010)

# Bài 3 - Truy vấn liên kết
Book.objects.filter(category__name="Lập trình")
for cat in Category.objects.all():
    print(f"{cat.name}:")
    for book in cat.book_set.all():
        print(f"  - {book.title}")

# Bài 4 - Thêm sinh viên và quan hệ N-N
s1 = Student.objects.create(name="Nguyễn An", student_id="SV001")
s1.books.set([b1, b2])

s2 = Student.objects.create(name="Trần Bình", student_id="SV002")
s2.books.set([b3, b4])

s3 = Student.objects.create(name="Lê Cường", student_id="SV003")
s3.books.set([b2, b5])

# Truy vấn
Student.objects.get(name="Nguyễn An").books.all()
Student.objects.filter(books__category__name="Khoa học").distinct()
Student.objects.filter(books__title__icontains="Python").distinct().count()

# Bài 5 - Thống kê dữ liệu
from django.db.models import Count, Sum

Student.objects.annotate(book_count=Count('books')).values('name', 'book_count')
Category.objects.annotate(total_books=Count('book')).values('name', 'total_books')
Student.objects.aggregate(total=Count('books'))
Book.objects.annotate(num_students=Count('student')).order_by('-num_students')[:3]
	◦	


#Thư-mục-mới